{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u043E\\u043D\\u0430\\u043B\\u044C\\u0434\\\\Documents\\\\e-commerce-react-big-project-main\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/Дональд/Documents/e-commerce-react-big-project-main/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACIC,SADJ,EAEIC,8BAFJ,QAGO,kCAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;KAAME,8B;AACN,MAAMC,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;MAAME,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGnB,8BAA8B,CAACkB,QAAD,CAArD;AACAjB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD;AAKH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAFxB;AAGI,QAAA,MAAM,EAAEV,KAAK,iBACT,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEH,OAA3C;AAAA,aAAwDG;AAAxD;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,KAAD;AACI,QAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADxB;AAEI,QAAA,MAAM,EAAEV,KAAK,iBACT,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAtCkC;;AAyCvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCxB,EAAAA,iBAAiB,EAAEkB,cAAc,IAC7BM,QAAQ,CAACxB,iBAAiB,CAACkB,cAAD,CAAlB;AAFwB,CAAL,CAAnC;;AAKA,eAAerB,OAAO,CAClB,IADkB,EAElB0B,kBAFkB,CAAP,CAGbjB,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    firestore,\r\n    convertCollectionSnapshotToMap\r\n} from '../../firebase/firebase.utils.js';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n            updateCollections(collectionsMap);\r\n            this.setState({ loading: false });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const { loading } = this.state;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}`}\r\n                    render={props => (\r\n                        <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\r\n                    )}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={props => (\r\n                        <CollectionPageWithSpinner isLoading={loading} {...props} />\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap =>\r\n        dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ShopPage);"]},"metadata":{},"sourceType":"module"}