{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (err) {\n    yield put(googleSignInFailure(err));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)], call(onEmailSignInStart));\n}","map":{"version":3,"sources":["C:/Users/Дональд/Documents/e-commerce-react-big-project-main/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","err","signInWithEmail","payload","email","password","signInWithEmailAndPassword","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAgG,gBAAhG;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAIF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GALD,CAKC,OAAMC,GAAN,EAAU;AACX,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,GAAD,CAApB,CAAT;AACC;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAuD;AAC1D,MAAI;AACA,UAAM;AAACX,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACS,kBAAkB,CAAC;AAACQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAIF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAMO,KAAN,EAAY;AACV,UAAMzB,GAAG,CAACU,kBAAkB,CAACe,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,oBAAjB,EAAuChB,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUiB,kBAAV,GAA8B;AACjC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,mBAAjB,EAAsCT,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACwB,mBAAD,CAAL,CAAD,EAA8BxB,IAAI,CAAC0B,kBAAD,CAAlC,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\"\r\nimport UserActionTypes from \"./user.types\";\r\nimport {auth, googleProvider, createUserProfileDocument} from \"../../firebase/firebase.utils\";\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure} from \"./user.actions\";\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider)\r\n        const userRef = yield call(createUserProfileDocument, user)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(googleSignInSuccess({id: userSnapshot.id, ... userSnapshot.data()}))\r\n    }catch(err){\r\n    yield put(googleSignInFailure(err))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\r\n        const userRef = yield call(createUserProfileDocument, user)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(emailSignInSuccess({id: userSnapshot.id, ... userSnapshot.data()}))\r\n    } catch(error){\r\n        yield put(emailSignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart)], call(onEmailSignInStart))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}