{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u043E\\u043D\\u0430\\u043B\\u044C\\u0434\\\\Documents\\\\e-commerce-react-big-project-main\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/YOUR_PROJECT_ID/databases/(default)/documents/'); // collectionRef.get().then(snapshot =>{\n    //     const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n    //     updateCollections(collectionsMap)\n    //     this.setState({loading: false})\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/Дональд/Documents/e-commerce-react-big-project-main/src/pages/shop/shop.component.jsx"],"names":["React","Route","firestore","convertCollectionSnapshotToMap","updateCollections","WithSpinner","connect","CollectionsOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACE,mBAAD,CAAjD;KAAME,6B;AACN,MAAMC,yBAAyB,GAAGL,WAAW,CAACG,cAAD,CAA7C;MAAME,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACAC,MAAAA,OAAO,EAAE;AADT,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACZ,MAAAA;AAAD,QAAsB,KAAKa,KAAjC;AACA,UAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,6FAAD,CAAL,CAJgB,CAKhB;AACA;AACA;AACA;AACA;AAEH;;AACHC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKL,KAArB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGN,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AACI,QAAA,IAAI,EAAG,GAAEK,KAAK,CAACC,IAAK,gBADxB;AAEI,QAAA,MAAM,EAAGN,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFvB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA7BoC;;AAgCvC,MAAMO,kBAAkB,GAAGC,QAAQ,KAAI;AACnCrB,EAAAA,iBAAiB,EAAEsB,cAAc,IAC7BD,QAAQ,CAACrB,iBAAiB,CAACsB,cAAD,CAAlB;AAFuB,CAAJ,CAAnC;;AAKA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\r\nimport {updateCollections} from \"../../redux/shop/shop.actions\";\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nimport {connect} from 'react-redux'\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n            loading: true\r\n        }\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const {updateCollections} = this.props\r\n        const collectionRef = firestore.collection('collections')\r\n\r\n        fetch('https://firestore.googleapis.com/v1/projects/YOUR_PROJECT_ID/databases/(default)/documents/')\r\n        // collectionRef.get().then(snapshot =>{\r\n        //     const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n        //     updateCollections(collectionsMap)\r\n        //     this.setState({loading: false})\r\n        // })\r\n\r\n    }\r\n  render() {\r\n      const {match} = this.props\r\n      const {loading} = this.state\r\n      return(\r\n          <div className='shop-page'>\r\n              <Route exact path={`${match.path}`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>} />\r\n              <Route\r\n                  path={`${match.path}/:collectionId`}\r\n                  render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props}/>} />\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    updateCollections: collectionsMap =>\r\n        dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}