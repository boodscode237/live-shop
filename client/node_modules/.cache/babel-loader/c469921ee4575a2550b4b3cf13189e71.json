{"ast":null,"code":"import firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCRlJCmhpf0ZovaUYXseXNr9n-_hbx7_P0\",\n  authDomain: \"shop-db-40826.firebaseapp.com\",\n  projectId: \"shop-db-40826\",\n  storageBucket: \"shop-db-40826.appspot.com\",\n  messagingSenderId: \"49013690694\",\n  appId: \"1:49013690694:web:454c9838a7fac56c8a5547\",\n  measurementId: \"G-DVY7SL63HH\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get(); //to represent the data\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (e) {\n      console.log('error creating user', e);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Дональд/Documents/e-commerce-react-big-project-main/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","e","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,SAAS,EAAE,eAHA;AAIXC,EAAAA,aAAa,EAAE,2BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,aALR;AAMXC,EAAAA,KAAK,EAAE,0CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CALyE,CAKpC;;AAErC,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBV,QAA9B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CACF;AACIJ,QAAAA,WADJ;AAEIC,QAAAA,KAFJ;AAGIC,QAAAA,SAHJ;AAII,WAAGV;AAJP,OADE,CAAN;AAQH,KATD,CASC,OAAMa,CAAN,EAAQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,CAAnC;AACH;AACJ;;AACD,SAAOZ,OAAP;AACH,CAzBM;AA2BPZ,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n    apiKey: \"AIzaSyCRlJCmhpf0ZovaUYXseXNr9n-_hbx7_P0\",\n    authDomain: \"shop-db-40826.firebaseapp.com\",\n    projectId: \"shop-db-40826\",\n    storageBucket: \"shop-db-40826.appspot.com\",\n    messagingSenderId: \"49013690694\",\n    appId: \"1:49013690694:web:454c9838a7fac56c8a5547\",\n    measurementId: \"G-DVY7SL63HH\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n    const snapshot = await userRef.get() //to represent the data\n    \n    if(!snapshot.exists){\n        const { displayName, email} = userAuth\n        const createdAt = new Date()\n\n        try {\n            await userRef.set(\n                {\n                    displayName,\n                    email,\n                    createdAt,\n                    ...additionalData\n                }\n            )\n        }catch(e){\n            console.log('error creating user', e)\n        }\n    }\n    return userRef\n}\n\nfirebase.initializeApp(config)\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({prompt: 'select_account'})\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase"]},"metadata":{},"sourceType":"module"}