{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shop.types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"function fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield convertCollectionsSnapshotToMap(snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Дональд/Documents/e-commerce-react-big-project-main/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMX,+BAA+B,CAACS,QAAD,CAA5D;AACA,UAAMX,GAAG,CAACK,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AAChBd,IAAAA,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAH;AACC;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMlB,UAAU,CAACG,eAAe,CAACgB,uBAAjB,EACZX,qBADY,CAAhB;AAEH","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects'\r\nimport ShopActionTypes from \"./shop.types\";\r\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\r\nimport {fetchCollectionsFailure, fetchCollectionsSuccess} from \"./shop.actions\";\r\n\r\n\r\nexport function* fetchCollectionsAsync(){\r\n    yield console.log(\"function fired\")\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield convertCollectionsSnapshotToMap(snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    } catch (error) {\r\n    put(fetchCollectionsFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}